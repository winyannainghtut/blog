<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Khaw&#39;s Blog</title>
    <link>https://khawstech.com/</link>
    <description>Recent content on Khaw&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://khawstech.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating RDS&#43;EC2 (Two Tier Architecture)</title>
      <link>https://khawstech.com/posts/creating-rds&#43;ec2-two-tier-architecture/</link>
      <pubDate>Fri, 20 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://khawstech.com/posts/creating-rds&#43;ec2-two-tier-architecture/</guid>
      <description>Creating RDS + EC2 (Two Tier Architecture) Objective To connect RDS with EC2.
 Install MySQL Client on EC2. Using mysql command line to connect RDS. Create Database name in HC_WYNH  EC2 instance (Ubuntu Server) with app-server-sg (security Group) RDS instance with db-server-sg (security group) Installing Mysql client on EC2 (ubuntu). sudo apt-get install mysql-clientUsing mysql command to connect with RDS. mysql -h {DB End Point} -P LOCAL_PORT -u RDS_USER -pCreating a Database :wq!</description>
    </item>
    
    <item>
      <title>CreatingKeyPair</title>
      <link>https://khawstech.com/posts/creatingkeypair/</link>
      <pubDate>Fri, 20 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://khawstech.com/posts/creatingkeypair/</guid>
      <description>Creating Key Pair using AWS CFN Create key pairs - Amazon Elastic Compute Cloud
Objective  To create AWS Key Pair using Cloudformation. (Using the default profile)  Create a CloudFormation Template: Start by creating a CloudFormation template in YAML format.**`AWS::EC2::KeyPair`** is defined with the name “wynhkeypair&amp;quot;. You can change the **`KeyName`** property to your desired key pair name. AWSTemplateFormatVersion:&amp;#34;2010-09-09&amp;#34;Resources:wynhkeypair:#edit here Type:AWS::EC2::KeyPairProperties:KeyName:wynhkeypairDeploy the Template: aws cloudformation create-stack --stack-name wynhkeypair --template-body file://keypair-wynh.</description>
    </item>
    
    <item>
      <title>CreatingKeyPair</title>
      <link>https://khawstech.com/posts/ec2-&#43;-keypair-creation/</link>
      <pubDate>Fri, 20 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://khawstech.com/posts/ec2-&#43;-keypair-creation/</guid>
      <description>EC2 + Keypair creation Create key pairs - Amazon Elastic Compute Cloud
AWS::EC2::Instance - AWS CloudFormation
Objective
 To create AWS KeyPair + EC2 using Cloudformation. (Using the default profile)  Create a CloudFormation Template: Make a yaml file named ec2cfn.yaml. Added the below template.  AWSTemplateFormatVersion:&amp;#34;2010-09-09&amp;#34;Description:CFN+EC2+KeyPairResources:wynhkeypair:Type:&amp;#39;AWS::EC2::KeyPair&amp;#39;Properties:KeyName:wynhkeypairEc2Instance:Type:&amp;#39;AWS::EC2::Instance&amp;#39;Properties:InstanceType:&amp;#39;t2.micro&amp;#39;AvailabilityZone:&amp;#39;ap-southeast-1a&amp;#39;ImageId:&amp;#39;ami-002843b0a9e09324a&amp;#39;KeyName:!RefwynhkeypairRun the code: aws cloudformation create-stack --stack-name ec2nkeypair --template-body file://ec2cfn.yamlOutput:
The keypair(wynhkeypair) is attached.
Describe the key pair: aws ec2 describe-key-pairs --filters Name=key-name,Values=wynhkeypair --query KeyPairs[*].</description>
    </item>
    
    <item>
      <title>CreatingKeyPair</title>
      <link>https://khawstech.com/posts/vpcwithcfn/</link>
      <pubDate>Fri, 20 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://khawstech.com/posts/vpcwithcfn/</guid>
      <description>VPC creation with CFN AWS::EC2::VPC - AWS CloudFormation
AWS::EC2::Subnet - AWS CloudFormation
AWS::EC2::NatGateway - AWS CloudFormation
Objective  To create AWS VPC,Public Subnets, Private Subnets and NAT Gateway using Cloudformation.  Diagram Main Template AWSTemplateFormatVersion:&amp;#39;2010-09-09&amp;#39;Description:CreatingVPCusingCFNResources:# NewVPCwynhVPC:Type:AWS::EC2::VPCProperties:CidrBlock:192.168.0.0/16EnableDnsHostnames:trueEnableDnsSupport:trueTags:- Key:&amp;#39;Name&amp;#39;Value:&amp;#39;wynhVPC&amp;#39;- Key:&amp;#39;Region&amp;#39;Value:&amp;#39;Singapore&amp;#39;# public-subnet-1pubSubnet1:Type:AWS::EC2::SubnetProperties:VpcId:!RefwynhVPCCidrBlock:192.168.0.0/24MapPublicIpOnLaunch:falseAvailabilityZone:&amp;#39;ap-southeast-1a&amp;#39;Tags:- Key:&amp;#39;Name&amp;#39;Value:&amp;#39;pubSubnet1&amp;#39;- Key:&amp;#39;Region&amp;#39;Value:&amp;#39;Singapore&amp;#39;# public-subnet-2pubSubnet2:Type:AWS::EC2::SubnetProperties:VpcId:!RefwynhVPCCidrBlock:192.168.1.0/24MapPublicIpOnLaunch:falseAvailabilityZone:&amp;#39;ap-southeast-1b&amp;#39;Tags:- Key:&amp;#39;Name&amp;#39;Value:&amp;#39;pubSubnet2&amp;#39;- Key:&amp;#39;Region&amp;#39;Value:&amp;#39;Singapore&amp;#39;# public-subnet-3pubSubnet3:Type:AWS::EC2::SubnetProperties:VpcId:!RefwynhVPCCidrBlock:192.168.2.0/24MapPublicIpOnLaunch:falseAvailabilityZone:&amp;#39;ap-southeast-1c&amp;#39;Tags:- Key:&amp;#39;Name&amp;#39;Value:&amp;#39;pubSubnet3&amp;#39;- Key:&amp;#39;Region&amp;#39;Value:&amp;#39;Singapore&amp;#39;# private-subnet-1privateSubnet1:Type:AWS::EC2::SubnetProperties:VpcId:!RefwynhVPCCidrBlock:192.168.3.0/24MapPublicIpOnLaunch:falseAvailabilityZone:&amp;#39;ap-southeast-1a&amp;#39;Tags:- Key:&amp;#39;Name&amp;#39;Value:&amp;#39;privateSubnet1&amp;#39;- Key:&amp;#39;Region&amp;#39;Value:&amp;#39;Singapore&amp;#39;# private-subnet-2privateSubnet2:Type:AWS::EC2::SubnetProperties:VpcId:!RefwynhVPCCidrBlock:192.168.4.0/24MapPublicIpOnLaunch:falseAvailabilityZone:&amp;#39;ap-southeast-1b&amp;#39;Tags:- Key:&amp;#39;Name&amp;#39;Value:&amp;#39;privateSubnet2&amp;#39;- Key:&amp;#39;Region&amp;#39;Value:&amp;#39;Singapore&amp;#39;# private-subnet-3privateSubnet3:Type:AWS::EC2::SubnetProperties:VpcId:!RefwynhVPCCidrBlock:192.168.5.0/24MapPublicIpOnLaunch:falseAvailabilityZone:&amp;#39;ap-southeast-1c&amp;#39;Tags:- Key:&amp;#39;Name&amp;#39;Value:&amp;#39;privateSubnet3&amp;#39;- Key:&amp;#39;Region&amp;#39;Value:&amp;#39;Singapore&amp;#39;# internet-gatewaywynhIGW:Type:AWS::EC2::InternetGatewayProperties:Tags:- Key:&amp;#39;Name&amp;#39;Value:&amp;#39;wynhIGW&amp;#39;- Key:&amp;#39;Region&amp;#39;Value:&amp;#39;Singapore&amp;#39;# VPC &amp;lt;--&amp;gt; IGW attachmentVPCtoIGW:Type:AWS::EC2::VPCGatewayAttachmentProperties:VpcId:!</description>
    </item>
    
    <item>
      <title>How IAM Policy working?</title>
      <link>https://khawstech.com/posts/iam-policy/</link>
      <pubDate>Fri, 20 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://khawstech.com/posts/iam-policy/</guid>
      <description>Objective IAM Policy
 Create EC2 Instances Specific Instance Type (t2.micro, t3.micro) Specific Region (ap-southeast-1) Create RDS Instances Specific Region (ap-southeast-1)  Create IAM User Attach the above policy.
IAM Policy {&amp;#34;Version&amp;#34;: &amp;#34;2012-10-17&amp;#34;,&amp;#34;Statement&amp;#34;: [{&amp;#34;Effect&amp;#34;: &amp;#34;Allow&amp;#34;,&amp;#34;Action&amp;#34;: [&amp;#34;ec2:DescribeAccountAttributes&amp;#34;,&amp;#34;ec2:DescribeInstances&amp;#34;,&amp;#34;ec2:DescribeImages&amp;#34;,&amp;#34;ec2:DescribeInstanceTypes&amp;#34;,&amp;#34;ec2:DescribeKeyPairs&amp;#34;,&amp;#34;ec2:CreateKeyPair&amp;#34;,&amp;#34;ec2:DescribeVpcs&amp;#34;,&amp;#34;ec2:DescribeSubnets&amp;#34;,&amp;#34;ec2:DescribeSecurityGroups&amp;#34;,&amp;#34;ec2:CreateSecurityGroup&amp;#34;,&amp;#34;ec2:AuthorizeSecurityGroupIngress&amp;#34;],&amp;#34;Resource&amp;#34;: &amp;#34;*&amp;#34;},{&amp;#34;Effect&amp;#34;: &amp;#34;Allow&amp;#34;,&amp;#34;Action&amp;#34;: &amp;#34;ec2:RunInstances&amp;#34;,&amp;#34;Resource&amp;#34;: [&amp;#34;arn:aws:ec2:ap-southeast-1:764523291456:network-interface/*&amp;#34;,&amp;#34;arn:aws:ec2:ap-southeast-1:764523291456:volume/*&amp;#34;,&amp;#34;arn:aws:ec2:ap-southeast-1:764523291456:key-pair/*&amp;#34;,&amp;#34;arn:aws:ec2:ap-southeast-1:764523291456:security-group/*&amp;#34;,&amp;#34;arn:aws:ec2:ap-southeast-1:764523291456:subnet/subnet-*&amp;#34;,&amp;#34;arn:aws:ec2:ap-southeast-1::image/ami-*&amp;#34;]},{&amp;#34;Effect&amp;#34;: &amp;#34;Allow&amp;#34;,&amp;#34;Action&amp;#34;: [&amp;#34;ec2:RunInstances&amp;#34;,&amp;#34;ec2:StartInstances&amp;#34;,&amp;#34;ec2:StopInstances&amp;#34;,&amp;#34;ec2:TerminateInstances&amp;#34;,&amp;#34;ec2:CreateTags&amp;#34;],&amp;#34;Resource&amp;#34;: [&amp;#34;arn:aws:ec2:ap-southeast-1:764523291456:instance/*&amp;#34;],&amp;#34;Condition&amp;#34;: {&amp;#34;StringEquals&amp;#34;: {&amp;#34;ec2:InstanceType&amp;#34;: [&amp;#34;t2.</description>
    </item>
    
    <item>
      <title>Networking Services in AWS</title>
      <link>https://khawstech.com/posts/networking-services-in-aws/</link>
      <pubDate>Thu, 19 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://khawstech.com/posts/networking-services-in-aws/</guid>
      <description>Big Picture of AWS Networking Services VPC ဆိုတာဘာလဲပေါ့ ?
Virtual private cloud လို့ခေါ်တဲ့ VPC ထဲမှာကျွန်တ်ောတို့ Networking နဲ့ပတ်သတ်တဲ့ AWS ရဲ့ services တွေကိုတစ်ချက် breakdown လုပ်ကြည့်လိုက်ရအောင်။
Subnets AWS ထဲမှာ ကျွန်တော်တို့က VPC တစ်ခုကို Create လုပ်လိုက်ပြီဆိုတာနဲ့ CIDR တစ်ခုကို သတ်မှတ်ပေးရမှာပါ။ အဲ့ဒီ CIDR ထဲကမှ Subnet တွေကို ပြန်ပြီး define လုပ်ပေးလို့ရပါတယ်။ ဥပမာ - 10.0.0.0/16 ဆိုတဲ့ CIDR range ထဲကနေပြီးတော့ 10.0.1.0/24 ဆိုတဲ့ Subnet ပြန်ခွဲလိုက်တာမျိုးပါ။ CIDR တွေကို ကြိုက်တဲ့ IP range ယူသုံးနိုင်ပါတယ်။ Public IP range တွေကို လဲ လိုအပ်ချက်အရယူသုံးလို့ရပေမယ့် နောက်ပိုင်း ပြဿနာအကြီးကြီးတတ်နိုင်တဲ့ အတွက် သတိပြုပြီးသုံးသင့်ပါတယ် ။ Private IP range ထဲက IP တွေကိုလဲ နောက်ပိုင်း VPC တွေတစ်ခုနဲ့တစ်ခုချိတ်ဆက်ဖို့ရှိတယ်ဆိုရင် မထပ်အောင်သုံးသင့်ပါတယ်။ နောက်ပြီးတော့ AWS မှာ reserved IP ဆိုတာရှိပါတယ်။ 10.</description>
    </item>
    
    
  </channel>
</rss>
